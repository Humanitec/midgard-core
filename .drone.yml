---
pipeline:

  install:
    image: node:9.9.0
    commands:
      - eval "$(ssh-agent -s)"
      - mkdir -p /root/.ssh
      - echo "$${SSH_KEY}\n" > /root/.ssh/id_rsa
      - echo "$${SSH_PUBLIC_KEY}\n" > /root/.ssh/id_rsa.pub
      - ssh-keyscan -t rsa github.com >> /root/.ssh/known_hosts
      - chmod 600 /root/.ssh/id_rsa*
      - ssh-add -k /root/.ssh/id_rsa
      - npm install npm-login-cmd -g
      - npm config set registry https://npm-proxy.fury.io/$${NPM_TOKEN}/humanitec/
      - npm config set always-auth
      - npx npm-login-cmd
      - npm install
    secrets: [NPM_USER, NPM_PASS, NPM_EMAIL, NPM_TOKEN, SSH_KEY, SSH_PUBLIC_KEY]
    when:
      event: [push, tag]

  build:
    image: node:9.9.0
    commands:
      - npm run build --prod
    when:
      event: [push, tag]
      status: [success]

  test:
    image: registry.tola.io/humanitec/docker-nodejs-and-chrome:0.0.1-8.12.0-latest
    commands:
      - npm run test
    when:
      event: [push, tag]
      status: [success]

  publish:
    image: node:9.9.0
    commands:
      - eval "$(ssh-agent -s)"
      - mkdir -p /root/.ssh
      - echo "$${SSH_KEY}\n" > /root/.ssh/id_rsa
      - echo "$${SSH_PUBLIC_KEY}\n" > /root/.ssh/id_rsa.pub
      - ssh-keyscan -t rsa github.com >> /root/.ssh/known_hosts
      - chmod 600 /root/.ssh/id_rsa*
      - ssh-add -k /root/.ssh/id_rsa
      - npm install npm-login-cmd -g
      - npm config set registry https://npm-proxy.fury.io/$${NPM_TOKEN}/humanitec/
      - npm config set always-auth
      - npx npm-login-cmd
      - npm run build
      - npm publish
    secrets: [NPM_USER, NPM_PASS, NPM_EMAIL, NPM_TOKEN, SSH_KEY, SSH_PUBLIC_KEY]
    when:
      event: [tag]

  notify:
    image: plugins/slack
    channel: drone-ci
    username: Drone-CI
    secrets: [SLACK_WEBHOOK]
    when:
      status: [failure]
